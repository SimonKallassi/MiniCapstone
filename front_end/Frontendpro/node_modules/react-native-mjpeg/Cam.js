/**
 * Renders a Single Camera based on the given Parameters
 * the WebView will grow to the size of the given container
 *
 * Version : 0.5
 * Only Supports MJPEG for now.  RTSP is Planned
 * 
 * <Cam
 * 	url={CAMERA URL}
 * 	style={CUSTOM STYLE FOR THE WEB VIEW}
 * 	automaticallyAdjustContentInsets={true} # Default false />
 * 	
*/

let React = require('react-native');

let {
  StyleSheet,
  WebView,
  Text,
} = React;

let styles = StyleSheet.create({
  defaultStyle: {
    flex: 1,
    padding: 0,
    margin: 0,
    backgroundColor: 'transparent'
  },
}); 

var Cam = React.createClass({
  
  getInitialState: function() {
    return {loading: true}
  },
  
  getDefaultProps: function() {
    return {
      url: null,
      automaticallyAdjustContentInsets: false,
    }
  },
   
  loading: function() {
    // Not Finished
    return <Text style={{color: '#FFF'}}>Loading Feed...</Text>
  },
  
  formatCamURL: function() { 
    if (this.props.url == null) {
      return;
    }
    console.log('Rendering Camera URL: ' + this.props.url);
    return ('<img src="' + this.props.url + '" width="100%" style="background-color: #303641; min-height: 100%; min-width: 100%; position: fixed; top: 0; left: 0;">');
  },
  
  onNavigationStateChange: function(navState) {
    console.log('onNavState');
    console.log(navState);
    this.setState({
      loading: navState.loading,
    });
  },
  
  render() {
    return (
	<WebView
	    style={this.props.style}
	    automaticallyAdjustContentInsets={this.props.automaticallyAdjustContentInsets}
	    scalesPageToFit={false}
	    renderLoading={this.loading}
	    startInLoadingState={false}
	    contentInset={{top: 0, right: 0, left: 0, bottom: 0}}
	    scrollEnabled={false}
	    onNavigationStateChange={this.onNavigationStateChange}
	    html={this.formatCamURL()}
	  />
    );
  },

});

module.exports = Cam;
